lexer grammar CTPLexer;

Comment      : '//' .*? LineBreak+ -> channel(HIDDEN);
Thread       : ('Thread' | 'thread');
Send         : ('Send' | 'send');
ISend        : ('ISend' | 'isend');
Recv         : ('Recv' | 'recv');
IRecv        : ('IRecv' | 'irecv');
Block        : ('Wait' | 'wait');
Barrier      : ('Barrier' | 'barrier');
Communicator : WholeNumber;
Process      : WholeNumber;
Tag          : WholeNumber;
Identifier   : (('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | Number)*) | Number;
Space        : WhiteSpace+ -> channel(HIDDEN);
WhiteSpace   : ' ' | '\t';
Comparator   : ('==' | '<' | '<=' | '>' | '>=');
OpenBlock    : '(';
CloseBlock   : ')';
LineBreak    : ('\r')? '\n' -> channel(HIDDEN);
Number       : ('-')? Digit+ ;
WholeNumber  : Digit+ ;
Digit        : '0'..'9' ;
